#!/bin/bash
#
#   Copyright 2018 Chrisdigity
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#
############
# Formals ###
v="1.0";
a="Chrisdigity";
name="MochiBalance";
fullname="$name - Version $v by $a";
script="mbal";
#########
# Vars ###
f_bx="../bin/bx";
f_ledger="../bin/d/ledger.dat";
f_addr="../bin/maddr.dat";
quiet=0;
debug=0;
check="";
hex="";
##############
# Functions ###
err () { [ $quiet -eq 0 ] && printf "$1" "$2" "$3" "$4" "$5" "$6" "$7" "$8" "$9"; exit 1; }
pout ()   { [ $quiet -eq 0 ] && printf "$1" "$2" "$3" "$4" "$5" "$6" "$7" "$8" "$9"; }
dcheck () { if [ $debug -eq 1 ]; then [ "$1" = "" ] && pout "DEBUG: $check\n" || pout "DEBUG: $1\n"; fi; }
################
# Flag checks ###
while [ $# -gt 0 ]; do
  case "$1" in
    --help|?)
      pout "\n$fullname\n\n";
      pout "  Shows the balance of your Mochimo address when you are too lazy to\n";
      pout "  open the wallet... or of course if the wallet is getting errors.\n\n";

      pout "Requirements: CLI Block Explorer (bx) && Ledger File (ledger.dat) &&\n";
      pout "               either an Address File (maddr.dat) or Hex Address\n";
      pout "Usage: ./$script || ./$script [options]\n";
      pout "Summary:\n";
      pout "    options -d                Debug verbosity\n";
      pout "            -q                Quiet, no errors\n";
      pout "            -c                Version and changelog/info\n";
      pout "            -b bx_file        Location of bx file [$f_bx]\n";
      pout "            -l ledger_file    Location of ledger file [$f_ledger]\n";
      pout "            -a address_file   Location of address file [$f_addr]\n";
      pout "            -h hex_address    The first part of your hex address\n";
      pout "                               -must be an even number of characters\n";
      pout "                               -recommended 8 characters minimum\n";
      exit 0
      ;;
    -c)
      pout "\n$fullname\n\n";

      pout "Changelog - last updated [2018/07/26]\n";
      pout "  v1.0\n";
      pout "  Initial implementation of script\n";
      pout "   - options allow changing of standard file locations\n";
      pout "   - input of hex address ignores address file\n";
      exit 0
      ;;
    -d)
      debug=1;
      ;;
    -q)
      quiet=1;
      ;;
    -b)
      shift;
      [ $# -gt 0 ] && f_bx=$1 || err "No Block Explorer Specified!\n";
      [ "${f_bx:0:1}" = "-" ] && err "Block Explorer Cannot begin with '-'\n";
      [ ! -f $f_bx ] && err "No such Block Exporer: $f_bx\n";
      ;;
    -l)
      shift;
      [ $# -gt 0 ] && f_ledger=$1 || err "No Ledger Specified!\n";
      [ "${f_ledger:0:1}" = "-" ] && err "Ledger Cannot begin with '-'\n";
      [ ! -f $f_ledger ] && err "No such Ledger: $f_ledger\n";
      ;;
    -a)
      shift;
      [ $# -gt 0 ] && f_addr=$1 || err "No Address File Specified!\n";
      [ "${f_addr:0:1}" = "-" ] && err "Address File Cannot begin with '-'\n";
      [ ! -f $f_addr ] && err "No such address file: $f_addr\n";
      ;;
    -h)
      shift;
      [ $# -gt 0 ] && hex=$1 || err "No Hex Address Specified!\n";
      [ "${hex:0:1}" = "-" ] && err "Hex Address Cannot begin with '-'\n";
      [ $((${#hex}%2)) -ne 0 ] && err "Hex Address must be an even number of characters\n";
      ;;
  esac
  shift
done;
dcheck "Flag checks complete...";
###############
# Pre checks ###
[ ! -r $f_addr ] && err "$f_addr - Does Not Exist or Cannot Read...\nExiting...\n\n";
[ ! -r "$f_ledger" ] && err "$f_ledger - Does Not Exist or Cannot Read...\nExiting...\n\n";
[ ! -r "$f_bx" ] && err "$f_bx - Does Not Exist or Cannot Read...\nExiting...\n\n";
if [ "$hex" = "" ]; then
  hex="$(xxd $f_addr | cut -d ' ' -f 2-9 | sed 's/ //g' | sed ':a;N;$!ba;s/\n//g')"; #dcheck "${#hex}";
  [ ${#hex} -ne 4416 ] && err "Not a public address file: $f_addr\n";
  hex="${hex:0:32}";
fi;
dcheck "Pre checks complete...";
################
# Get Balance ###
while [ "$hex" != "" ]; do
  check="$((echo f; echo $hex; echo q) | $f_bx -l $f_ledger | sed '1!G;h;$!d')"; #dcheck;
  [[ "$check" =~ "Not found" ]] && break;
  while read -r line; do [[ "$line" =~ "Balance" ]] && break; done <<< "$check";
  bal_hex=$(echo $line | cut -d "x" -f2 | cut -d "]" -f1); dcheck "$bal_hex";
  i=${#bal_hex};
  while [ $i -gt -1 ]; do bal=$bal${bal_hex:$i:2}; i=$((i-2)); done; dcheck "$bal";
  bal=$(bc <<< "scale=9; $(( 16#$bal ))/1000000000");
  break;
done;
echo $bal;

dcheck "End...";